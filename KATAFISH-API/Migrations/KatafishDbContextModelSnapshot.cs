// <auto-generated />
using Katafish.Db;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace KATAFISH_API.Migrations
{
    [DbContext(typeof(KatafishDbContext))]
    partial class KatafishDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Katafish.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("phoneNumber")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("username")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Users", (string)null);

                    b.UseTptMappingStrategy();
                });

            modelBuilder.Entity("Katafish.Models.Chef", b =>
                {
                    b.HasBaseType("Katafish.Models.User");

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("specialty")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Chefs", (string)null);
                });

            modelBuilder.Entity("Katafish.Models.Customer", b =>
                {
                    b.HasBaseType("Katafish.Models.User");

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("zipCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("Katafish.Models.Receptionist", b =>
                {
                    b.HasBaseType("Katafish.Models.User");

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Receptionists", (string)null);
                });

            modelBuilder.Entity("Katafish.Models.Waiter", b =>
                {
                    b.HasBaseType("Katafish.Models.User");

                    b.Property<string>("bio")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("location")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("profilePicture")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("Waiters", (string)null);
                });

            modelBuilder.Entity("Katafish.Models.Chef", b =>
                {
                    b.HasOne("Katafish.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Katafish.Models.Chef", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Katafish.Models.Customer", b =>
                {
                    b.HasOne("Katafish.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Katafish.Models.Customer", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Katafish.Models.Receptionist", b =>
                {
                    b.HasOne("Katafish.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Katafish.Models.Receptionist", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Katafish.Models.Waiter", b =>
                {
                    b.HasOne("Katafish.Models.User", null)
                        .WithOne()
                        .HasForeignKey("Katafish.Models.Waiter", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
